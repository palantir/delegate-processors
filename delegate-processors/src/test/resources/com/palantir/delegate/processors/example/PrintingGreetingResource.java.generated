package com.palantir.delegate.processors.example;

import java.util.Objects;
import javax.annotation.processing.Generated;

@Generated("com.palantir.delegate.processors.processor.PrintingProcessor")
public final class PrintingGreetingResource implements GreetingService {
    private final GreetingService delegate;

    private PrintingGreetingResource(GreetingService delegate) {
        this.delegate = Objects.requireNonNull(delegate, "delegate");
    }

    @Override
    public String greet() {
        System.out.println("greet");
        try {
            String _result = this.delegate.greet();
            System.out.println(_result);
            return _result;
        } catch (Throwable _throwable) {
            _throwable.printStackTrace();
            throw _throwable;
        } finally {
            System.out.println("done");
        }
    }

    @Override
    public String toString() {
        return "PrintingGreetingResource{" + this.delegate + "}";
    }

    public static PrintingGreetingResource of(GreetingService delegate) {
        return new PrintingGreetingResource(delegate);
    }
}
